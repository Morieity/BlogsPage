@page "/articles/{id:int}"
@inject ArticleService ArticleService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<div class="row justify-content-center">
    <div class="col-md-10">
        @if (isLoading)
        {
            <div class="text-center">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">正在加载...</span>
                </div>
                <p class="mt-2"><em>正在加载文章...</em></p>
            </div>
        }
        else if (article == null)
        {
            <div class="alert alert-warning">
                <i class="bi bi-exclamation-triangle"></i>
                文章不存在或已被删除。
                <a href="/articles" class="alert-link">返回文章列表</a>
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="mb-1">@article.Title</h4>
                        <small class="text-muted">
                            <i class="bi bi-calendar"></i>
                            创建于 @article.CreatedAt.ToString("yyyy年MM月dd日 HH:mm")
                            @if (article.UpdatedAt.HasValue && article.UpdatedAt != article.CreatedAt)
                            {
                                <span class="ms-3">
                                    <i class="bi bi-pencil"></i>
                                    更新于 @article.UpdatedAt.Value.ToString("yyyy年MM月dd日 HH:mm")
                                </span>
                            }
                        </small>
                    </div>
                    <div class="btn-group">
                        <a href="/articles/edit/@article.Id" class="btn btn-outline-warning btn-sm">
                            <i class="bi bi-pencil"></i>
                            编辑
                        </a>
                        <button class="btn btn-outline-danger btn-sm" @onclick="ConfirmDelete">
                            <i class="bi bi-trash"></i>
                            删除
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(article.Content))
                    {
                        <div class="article-content">
                            @foreach (var paragraph in article.Content.Split('\n'))
                            {
                                @if (!string.IsNullOrWhiteSpace(paragraph))
                                {
                                    <p>@paragraph</p>
                                }
                                else
                                {
                                    <br />
                                }
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted fst-italic">此文章暂无内容。</p>
                    }
                </div>
                <div class="card-footer">
                    <div class="d-flex justify-content-between">
                        <button type="button" class="btn btn-secondary" @onclick="GoBack">
                            <i class="bi bi-arrow-left"></i>
                            返回列表
                        </button>
                        <div>
                            <small class="text-muted">文章ID: @article.Id</small>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@if (showDeleteModal)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">确认删除</h5>
                    <button type="button" class="btn-close" @onclick="CloseDeleteModal"></button>
                </div>
                <div class="modal-body">
                    <p>确定要删除文章 "<strong>@article?.Title</strong>" 吗？</p>
                    <p class="text-muted">此操作不可撤销。</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseDeleteModal">取消</button>
                    <button type="button" class="btn btn-danger" @onclick="DeleteArticle" disabled="@isDeleting">
                        @if (isDeleting)
                        {
                            <span class="spinner-border spinner-border-sm me-2"></span>
                        }
                        删除
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<style>
    .article-content {
        line-height: 1.6;
        font-size: 1.1rem;
    }
    
    .article-content p {
        margin-bottom: 1rem;
    }
</style>

@code {
    [Parameter] public int Id { get; set; }
    
    private ArticleDto? article;
    private bool isLoading = true;
    private bool showDeleteModal = false;
    private bool isDeleting = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadArticle();
    }

    private async Task LoadArticle()
    {
        try
        {
            isLoading = true;
            article = await ArticleService.GetArticleAsync(Id);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"加载文章时出错: {ex.Message}");
            await JSRuntime.InvokeVoidAsync("alert", "加载文章失败，请稍后重试。");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ConfirmDelete()
    {
        showDeleteModal = true;
    }

    private void CloseDeleteModal()
    {
        showDeleteModal = false;
    }

    private async Task DeleteArticle()
    {
        if (article == null) return;

        try
        {
            isDeleting = true;
            var success = await ArticleService.DeleteArticleAsync(article.Id);
            
            if (success)
            {
                await JSRuntime.InvokeVoidAsync("alert", "文章删除成功！");
                Navigation.NavigateTo("/articles");
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", "删除失败，请稍后重试。");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"删除文章时出错: {ex.Message}");
            await JSRuntime.InvokeVoidAsync("alert", "删除失败，请稍后重试。");
        }
        finally
        {
            isDeleting = false;
            CloseDeleteModal();
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/articles");
    }
}
